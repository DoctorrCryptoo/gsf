<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:conv="clr-namespace:GSF.TimeSeries.UI.Converters;assembly=GSF.TimeSeries.UI"
                    xmlns:util="clr-namespace:GSF.TimeSeries.UI;assembly=GSF.TimeSeries.UI.WPF"
                    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation">

    <Style TargetType="Label" x:Key="RoundedEdgesLeft" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true" 
                            CornerRadius="5 0 0 5">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="RoundedEdgesRight" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="true" 
                            CornerRadius="0 5 5 0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="RequiredLabel">
        <Setter Property="Margin" Value="5,5,0,5" />
    </Style>

    <Style TargetType="TextBlock" x:Key="Underline">
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style TargetType="TextBlock" x:Key="Shadow">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" Direction="330" Color="Black" Opacity="0.25" BlurRadius="0.75"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="UnderlineShadow">
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" Direction="330" Color="Black" Opacity="0.25" BlurRadius="0.75"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="RequiredMarker">
        <Setter Property="Text" Value="*" />
        <Setter Property="Foreground" Value="#FFCC0000" />
        <Setter Property="Margin" Value="2,3,-1,5" />
    </Style>

    <Style x:Key="MainTitleStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource MainTitleForegroundBrush}"/>
        <Setter Property="Effect" Value="{StaticResource TextDarkShadowEffect}"/>
        <Setter Property="FontSize" Value="30"/>
    </Style>

    <Style x:Key="CenterAlignCellStyle" TargetType="sdk:DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="sdk:DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="#FF9EA7BF"/>
                <Setter Property="BorderBrush" Value="#FF9EA7BF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="{StaticResource LargerItemSize}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Polygon Points="0,0 10,0 0,10 0,0" HorizontalAlignment="Right" Fill="Red" FlowDirection="RightToLeft" />
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder Name="ControlWithError" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Width" Value="{StaticResource LargerItemSize}"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!--<Style x:Key="DataGridColumnHeaderStyle" TargetType="sdk:DataGridColumnHeader">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="{StaticResource HeaderRowBackgroundBrush}"/>            
        <Setter Property="Foreground" Value="#FF000000"/>        
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="Click to sort."/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderLeftGripperStyle" BasedOn="{StaticResource ColumnHeaderGripperStyle}"  TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" Name="Border">
                        <!--<Canvas>
                                <Line RenderOptions.EdgeMode="Aliased" X1="7" Y1="{Binding ElementName=Border, Path=ActualHeight}"
                                      X2="7" Y2="0" Stroke="DarkGray"/>
                            </Canvas>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type sdk:DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="{StaticResource HeaderRowBackgroundBrush}"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sdk:DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                              Background="{StaticResource HeaderRowBackgroundBrush}"                               
                              Grid.ColumnSpan="2" />

                        <ContentPresenter Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" />

                        <Thumb x:Name="PART_LeftHeaderGripper"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource ColumnHeaderLeftGripperStyle}"/>

                        <Path Name="UpArrow" Fill="Black" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="6,0"/>
                                        <LineSegment Point="3,5"/>
                                        <LineSegment Point="0,0"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Path Name="DownArrow" Fill="Black" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5" Visibility="Hidden">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,5">
                                        <LineSegment Point="6,5"/>
                                        <LineSegment Point="3,0"/>
                                        <LineSegment Point="0,5"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="ToolTip" Value="Click to sort."/>
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Visibility="Hidden" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="sdk:DataGrid">
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="AlternatingRowBackground" Value="#FFDEE7EE" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="VerticalGridLinesBrush" Value="#FFE1E9EE" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="True"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style TargetType="sdk:DataGridCell">
        <Style.Triggers>
            <Trigger Property="sdk:DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="#FF9EA7BF"/>
                <Setter Property="BorderBrush" Value="#FF9EA7BF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="{StaticResource XSmallItemSize}" />
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style TargetType="Button" x:Key="HomeButtonStyle">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Width" Value="{StaticResource LargeItemSize}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="MenuSeparatorStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Separator HorizontalAlignment="Stretch" IsEnabled="false"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}" x:Key="MenuStyle">
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemStyle">
        <Setter Property="Command" Value="{Binding Command}" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Margin" Value="5" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="AlternationCount" Value="2"/>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="true" Background="White" Margin="0">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter TargetName="Border" Property="Background" Value="#FFDEE7EE"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightBlue"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF9EA7BF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>